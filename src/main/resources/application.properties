spring.application.name=community
server.servlet.context-path=/community
# ThymeleafProperties
spring.thymeleaf.cache=false
# 数据库驱动
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 数据库连接
spring.datasource.url=jdbc:mysql://localhost:3306/community?characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong
# 数据库名称
spring.datasource.username=root
# 数据库密码
spring.datasource.password=123456
# 数据库连接池类型
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000

# mybatis配置
mybatis.mapper-locations=classpath:mapper/*.xml
# 实体类路径
mybatis.type-aliases-package=com.nowcoder.community.entity
# 数据库表字段主键id自增，自动生成
mybatis.configuration.use-generated-keys=true
# mybatis驼峰映射
mybatis.configuration.map-underscore-to-camel-case=true

# 日志级别变为debug
logging.level.com.nowcoder.community=debug
#logging.file=D:/Code/Log/nowcoder/community.log

# 邮箱配置
spring.mail.host=smtp.sina.cn
spring.mail.port=465
spring.mail.username=18770037080m@sina.cn
spring.mail.password=fb0a7261c987f13c
spring.mail.protocol=smtps
spring.mail.properties.mail.smtp.ssl.enable=true

# community
community.path.domain=http://localhost:8080
community.path.upload=d:/Code/upload

# RedisProperties
spring.redis.database=11
spring.redis.host=localhost
spring.redis.port=6379

# kafkaProperties
# 服务器地址
spring.kafka.bootstrap-servers=localhost:9092
# 消费者组
spring.kafka.consumer.group-id=community-consumer-group
# 是否自动提交偏移量
spring.kafka.consumer.enable-auto-commit=true
# 自动提交间隔
spring.kafka.consumer.auto-commit-interval=3000

# ElasticsearchProperties
spring.data.elasticsearch.cluster-name=nowcoder
spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300
spring.data.elasticsearch.repositories.enabled=true

# TaskExecutionProperties
# 线程数量
spring.task.execution.pool.core-size=5
# 线程不足时，最大扩展线程数
spring.task.execution.pool.max-size=15
# 当扩展也不足时，使用队列存储任务，队列大小
spring.task.execution.pool.queue-capacity=100

# TaskSchedulingProperties
spring.task.scheduling.pool.size=5

# QuartzProperties
# 存储方式
spring.quartz.job-store-type=jdbc
# 调度器名称
spring.quartz.scheduler-name=communityScheduler
# 调度器实例Id自动生成
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
# 存储类
spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
# 驱动类
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
# 采用集群方式
spring.quartz.properties.org.quartz.jobStore.isClustered=true
# 线程池类
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
# 线程数
spring.quartz.properties.org.quartz.threadPool.threadCount=5
